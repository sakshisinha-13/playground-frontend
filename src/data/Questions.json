[
  {
  "company": "Microsoft",
  "role": "Software Engineer",
  "yoe": "College Graduate",
    "oa": {
  "dsa": [
    {
      "year": "2019",
      "link": "https://www.geeksforgeeks.org/maximum-distance-between-two-points-in-coordinate-plane-using-rotating-calipers-method/",
      "difficulty": "Hard",
      "topic": "Greedy",
      "title": "Maximum Distance Between Two Points In Coordinate Plane Using Rotating Calipers Method",
      "description": "Given N points on the 2D plane, compute the maximum Euclidean distance between any two points. First compute the convex hull in O(N log N), then apply the rotating calipers method in O(N). \n\nConstraints:\n- 1 ≤ N ≤ 10^5\n- –10^9 ≤ x_i, y_i ≤ 10^9 \n\nExample:\nInput: [[0,0],[1,1],[2,3],[5,0]]\nOutput: 5.00000  // farthest pair is (0,0) and (5,0)\n"
    },
    {
      "year": "2019",
      "link": "https://leetcode.com/problems/minimum-number-of-moves-to-make-palindrome/description/",
      "difficulty": "Hard",
      "topic": "General",
      "title": "Minimum Number Of Moves To Make Palindrome",
      "description": "Given a string s, return the minimum number of moves to make it a palindrome. A move consists of taking any character and moving it to any position. Use a two-pointer/greedy approach. \n\nConstraints:\n- 1 ≤ s.length ≤ 10^4\n- s consists of lowercase letters only\n\nExamples:\nInput: \"aabb\"\nOutput: 2  // e.g. move 'a' to the end twice to get \"abba\"\n\nInput: \"mbadm\"\nOutput: 2  // e.g. \"madbm\" → \"madbm\" → \"madam\"\n"
    },
    {
      "year": "2021",
      "link": "https://www.geeksforgeeks.org/problems/longest-increasing-subsequence-1587115620/1",
      "difficulty": "Medium",
      "topic": "Dynamic Programming",
      "title": "Longest Increasing Subsequence 1587115620",
      "description": "Given an integer array nums, return the length of the longest strictly increasing subsequence. Use O(N log N) patience sorting or O(N^2) DP. \n\nConstraints:\n- 1 ≤ nums.length ≤ 2500\n- –10^4 ≤ nums[i] ≤ 10^4\n\nExample:\nInput: [10,9,2,5,3,7,101,18]\nOutput: 4  // one LIS is [2,3,7,101]\n"
    },
    {
      "year": "2022",
      "link": "https://www.geeksforgeeks.org/remove-three-consecutive-duplicates-string/",
      "difficulty": "Medium",
      "topic": "String Manipulation",
      "title": "Remove Three Consecutive Duplicates String",
      "description": "Given a string, repeatedly delete any occurrence of three consecutive identical characters until none remain. Return the final string. Use a stack or two-pointer approach. \n\nConstraints:\n- 1 ≤ |s| ≤ 10^5\n- s consists of lowercase letters\n\nExample:\nInput: \"deeedbbcccbdaa\"\nOutput: \"aa\"\nExplanation: remove \"eee\" → \"ddbbcccbdaa\", remove \"bbb\" → \"ddcccbdaa\", remove \"ccc\" → \"ddbdaa\", then no more triples.\n"
    },
    {
      "year": "2022",
      "link": "https://www.geeksforgeeks.org/rock-paper-scissor-game-in-cpp/",
      "difficulty": "Easy",
      "topic": "Implementation / Simulation",
      "title": "Rock Paper Scissor Game In Cpp",
      "description": "Simulate a Rock-Paper-Scissors game between two players over R rounds. For each round, read two characters ('R','P','S') and print the winner or \"Tie\". \n\nConstraints:\n- 1 ≤ R ≤ 1000\n- Moves are only 'R', 'P', or 'S'\n\nExample:\nInput:\n3\nR P\nS P\nS S\nOutput:\nPlayer2\nPlayer1\nTie\n"
    },
    {
      "year": "2024",
      "link": "https://www.geeksforgeeks.org/program-decimal-hexadecimal-conversion/",
      "difficulty": "Easy",
      "topic": "Bit Manipulation / Number Systems",
      "title": "Program Decimal Hexadecimal Conversion",
      "description": "Implement two functions:\n1. Convert a non-negative integer to its hexadecimal (uppercase) string.\n2. Convert a hexadecimal string back to its decimal value.\n\nConstraints:\n- 0 ≤ n ≤ 2^31 − 1\n- Hex string contains only digits and uppercase A–F\n\nExamples:\nInput: 255 → Output: \"FF\"\nInput: \"1A3F\" → Output: 6719\n"
    },
    {
      "year": "2024",
      "link": "https://leetcode.com/problems/longest-path-with-different-adjacent-characters/description/",
      "difficulty": "Hard",
      "topic": "Trees + DFS",
      "title": "Longest Path With Different Adjacent Characters",
      "description": "Given a tree of n nodes (0-indexed) via parent array and a string s where s[i] is the character at node i, find the length of the longest path such that adjacent nodes have different characters. Use DFS with tracking of top two child depths. \n\nConstraints:\n- 1 ≤ n ≤ 10^5\n- s.length = n\n\nExample:\nInput: parent = [-1,0,0,1,1,2], s = \"abacbe\"\nOutput: 3  // path \"e–c–a\" or \"b–a–c\"\n"
    },
    {
      "year": "2024",
      "link": "https://leetcode.com/problems/minimum-number-of-moves-to-make-palindrome/description/",
      "difficulty": "Hard",
      "topic": "Two Pointers / Greedy",
      "title": "Minimum Number Of Moves To Make Palindrome",
      "description": "See above entry (duplicate problem)."
    },
    {
      "year": "2024",
      "link": "https://www.geeksforgeeks.org/problems/swap-all-odd-and-even-bits-1587115621/1",
      "difficulty": "Easy",
      "topic": "Bit Manipulation",
      "title": "Swap All Odd And Even Bits 1587115621",
      "description": "Given a 32-bit unsigned integer, swap all odd bits with even bits and return the result. Use bit masks & shifts. \n\nConstraints:\n- 0 ≤ n ≤ 2^32 − 1\n\nExample:\nInput: 23 (binary 10111)\nOutput: 43 (binary 101011)\n"
    },
    {
      "year": "2024",
      "link": "https://www.geeksforgeeks.org/convert-binary-tree-to-doubly-linked-list-by-keeping-track-of-visited-node/",
      "difficulty": "Medium",
      "topic": "Trees + Linked List",
      "title": "Convert Binary Tree To Doubly Linked List By Keeping Track Of Visited Node",
      "description": "Convert a binary tree to a doubly linked list in place so that the inorder traversal of the tree corresponds to the sequence of DLL nodes. Return the head. Use recursion and track previous node. \n\nExample:\nInput:\n       10\n      /  \\\n     12   15\n    / \\    \\\n   25 30    36\n\nOutput DLL: 25 <-> 12 <-> 10 <-> 30 <-> 15 <-> 36\n"
    },
    {
      "year": "2024",
      "link": "https://www.geeksforgeeks.org/sort-a-linked-list-of-0s-1s-or-2s/",
      "difficulty": "Medium",
      "topic": "Linked List",
      "title": "Sort A Linked List Of 0s 1s Or 2s",
      "description": "Given a singly linked list where each node’s data is 0,1 or 2, sort the list so all 0s appear first, then 1s, then 2s. Do it in one pass using three dummy heads. \n\nConstraints:\n- 1 ≤ N ≤ 10^5\n\nExample:\nInput: 1->2->0->1->2->1\nOutput: 0->1->1->1->2->2\n"
    },
    {
      "year": "2024",
      "link": "https://www.geeksforgeeks.org/minimum-time-required-so-that-all-oranges-become-rotten/",
      "difficulty": "Medium",
      "topic": "Graphs + BFS",
      "title": "Minimum Time Required So That All Oranges Become Rotten",
      "description": "Given a grid where 0=empty, 1=fresh orange, 2=rotten orange, every minute all adjacent (4-dir) fresh oranges to rotten ones become rotten. Return minutes until all fresh oranges rot, or -1 if impossible. Use multi-source BFS. \n\nConstraints:\n- 1 ≤ rows,cols ≤ 10^3\n\nExample:\nInput:\n[[2,1,1],[1,1,0],[0,1,1]]\nOutput: 4\n"
    },
    {
      "year": "2025",
      "link": "https://www.geeksforgeeks.org/problems/kadanes-algorithm-1587115620/1",
      "difficulty": "Medium",
      "topic": "Dynamic Programming",
      "title": "Kadanes Algorithm 1587115620",
      "description": "Given an array of integers (which may include negatives), find the contiguous subarray with the largest sum and return that sum. Implement Kadane’s algorithm in O(N). \n\nConstraints:\n- 1 ≤ N ≤ 10^6\n- –10^9 ≤ arr[i] ≤ 10^9\n\nExample:\nInput: [-2,1,-3,4,-1,2,1,-5,4]\nOutput: 6  // subarray [4,-1,2,1]\n"
    },
    {
      "year": "2025",
      "link": "https://www.geeksforgeeks.org/problems/evaluation-of-postfix-expression1735/1",
      "difficulty": "Medium",
      "topic": "Stacks",
      "title": "Evaluation Of Postfix Expression1735",
      "description": "Given a valid postfix expression containing single-digit operands and operators +,-,*,/, evaluate and return its result. Use a stack to process operands and apply operators. \n\nConstraints:\n- Expression length ≤ 10^5\n\nExample:\nInput: \"231*+9-\"\nOutput: -4  // 2 + 3*1 - 9 = -4\n"
    },
    {
      "year": "2025",
      "link": "https://www.geeksforgeeks.org/problems/dice-throw5349/1",
      "difficulty": "Medium",
      "topic": "Dynamic Programming",
      "title": "Dice Throw5349",
      "description": "Given n dice each with m faces numbered 1..m, count the number of ways to get sum S. Use DP with dimensions [n+1][S+1]. \n\nConstraints:\n- 1 ≤ n, m ≤ 50\n- 1 ≤ S ≤ 10^3\n\nExample:\nInput: n=2, m=6, S=7\nOutput: 6  // combinations: (1,6),(2,5),(3,4),(4,3),(5,2),(6,1)\n"
    }
  ]
},
  "interview": {
  "dsa": [
        {
          "year": "2019",
          "link": "https://www.geeksforgeeks.org/longest-increasing-consecutive-subsequence/",
          "difficulty": "Easy",
          "topic": "Arrays / DP",
          "description": "Problem:\n  Implement **Longest Increasing Consecutive Subsequence**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Longest Increasing Consecutive Subsequence"
        },
        {
          "year": "2020",
          "link": "https://www.geeksforgeeks.org/reverse-a-linked-list-in-groups-of-given-size/",
          "difficulty": "Hard",
          "topic": "Linked List",
          "description": "Problem:\n  Implement **Reverse A Linked List In Groups Of Given Size**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Reverse A Linked List In Groups Of Given Size"
        },
        {
          "year": "2020",
          "link": "https://www.geeksforgeeks.org/level-order-traversal-in-spiral-form/",
          "difficulty": "Easy",
          "topic": "Trees / BFS",
          "description": "Problem:\n  Implement **Level Order Traversal In Spiral Form**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Level Order Traversal In Spiral Form"
        },
        {
          "year": "2020",
          "link": "https://www.geeksforgeeks.org/find-the-point-where-maximum-intervals-overlap/",
          "difficulty": "Medium",
          "topic": "Greedy",
          "description": "Problem:\n  Implement **Find The Point Where Maximum Intervals Overlap**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Find The Point Where Maximum Intervals Overlap"
        },
        {
          "year": "2020",
          "link": "https://www.geeksforgeeks.org/check-for-majority-element-in-a-sorted-array/",
          "difficulty": "Easy",
          "topic": "Binary Search",
          "description": "Problem:\n  Implement **Check For Majority Element In A Sorted Array**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Check For Majority Element In A Sorted Array"
        },
        {
          "year": "2021",
          "link": "https://www.geeksforgeeks.org/problems/reverse-a-stack/1",
          "difficulty": "Medium",
          "topic": "Stacks",
          "description": "Problem:\n  Implement **Reverse A Stack**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Reverse A Stack"
        },
        {
          "year": "2022",
          "link": "https://www.geeksforgeeks.org/problems/compute-before-matrix--170637/1",
          "difficulty": "Medium",
          "topic": "Matrix / Prefix Sum",
          "description": "Problem:\n  Implement **Compute Before Matrix  170637**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Compute Before Matrix  170637"
        },
        {
          "year": "2022",
          "link": "https://leetcode.com/problems/generate-parentheses/description/",
          "difficulty": "Medium",
          "topic": "Backtracking",
          "description": "Problem:\n  Implement **Generate Parentheses**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Generate Parentheses"
        },
        {
          "year": "2022",
          "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/description/",
          "difficulty": "Medium",
          "topic": "Trees",
          "description": "Problem:\n  Implement **Lowest Common Ancestor Of A Binary Tree**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Lowest Common Ancestor Of A Binary Tree"
        },
        {
          "year": "2022",
          "link": "https://www.geeksforgeeks.org/josephus-problem/",
          "difficulty": "Easy",
          "topic": "Recursion / Math",
          "description": "Problem:\n  Implement **Josephus Problem**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Josephus Problem"
        },
        {
          "year": "2022",
          "link": "https://leetcode.com/problems/word-ladder/description/",
          "difficulty": "Hard",
          "topic": "Graph",
          "description": "Problem:\n  Implement **Word Ladder**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Word Ladder"
        },
        {
          "year": "2022",
          "link": "https://www.geeksforgeeks.org/problems/search-in-a-matrix17201720/1",
          "difficulty": "Medium",
          "topic": "Matrix / Binary Search",
          "description": "Problem:\n  Implement **Search In A Matrix17201720**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Search In A Matrix17201720"
        },
        {
          "year": "2022",
          "link": "https://leetcode.com/problems/combination-sum/description/",
          "difficulty": "Medium",
          "topic": "Backtracking",
          "description": "Problem:\n  Implement **Combination Sum**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Combination Sum"
        },
        {
          "year": "2023",
          "link": "https://www.geeksforgeeks.org/problems/powx-n/1",
          "difficulty": "Easy",
          "topic": "Recursion",
          "description": "Problem:\n  Implement **Powx N**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Powx N"
        },
        {
          "year": "2023",
          "link": "https://www.geeksforgeeks.org/problems/add-1-to-a-number-represented-as-linked-list/1",
          "difficulty": "Medium",
          "topic": "Linked List",
          "description": "Problem:\n  Implement **Add 1 To A Number Represented As Linked List**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Add 1 To A Number Represented As Linked List"
        },
        {
          "year": "2023",
          "link": "https://www.geeksforgeeks.org/lru-cache-implementation/",
          "difficulty": "Medium",
          "topic": "Hashing",
          "description": "Problem:\n  Implement **Lru Cache Implementation**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Lru Cache Implementation"
        },
        {
          "year": "2023",
          "link": "https://www.geeksforgeeks.org/problems/prefix-to-postfix-conversion/1",
          "difficulty": "Medium",
          "topic": "Stacks",
          "description": "Problem:\n  Implement **Prefix To Postfix Conversion**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Prefix To Postfix Conversion"
        },
        {
          "year": "2023",
          "link": "https://www.geeksforgeeks.org/problems/stock-span-problem-1587115621/1",
          "difficulty": "Medium",
          "topic": "Stacks",
          "description": "Problem:\n  Implement **Stock Span Problem 1587115621**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Stock Span Problem 1587115621"
        },
        {
          "year": "2023",
          "link": "https://www.geeksforgeeks.org/problems/first-non-repeating-character-in-a-stream1216/1",
          "difficulty": "Medium",
          "topic": "Queue / Hashing",
          "description": "Problem:\n  Implement **First Non Repeating Character In A Stream1216**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "First Non Repeating Character In A Stream1216"
        },
        {
          "year": "2023",
          "link": "https://www.geeksforgeeks.org/problems/decode-the-string2444/1",
          "difficulty": "Medium",
          "topic": "Stacks",
          "description": "Problem:\n  Implement **Decode The String2444**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Decode The String2444"
        },
        {
          "year": "2023",
          "link": "https://www.geeksforgeeks.org/problems/print-matrix-in-zig-zag-fashion--122748/1",
          "difficulty": "Easy",
          "topic": "Matrix",
          "description": "Problem:\n  Implement **Print Matrix In Zig Zag Fashion  122748**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Print Matrix In Zig Zag Fashion  122748"
        },
        {
          "year": "2023",
          "link": "https://leetcode.com/problems/reverse-words-in-a-string/description/",
          "difficulty": "Medium",
          "topic": "String",
          "description": "Problem:\n  Implement **Reverse Words In A String**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Reverse Words In A String"
        },
        {
          "year": "2023",
          "link": "https://www.geeksforgeeks.org/problems/distance-of-nearest-cell-having-1-1587115620/1",
          "difficulty": "Medium",
          "topic": "BFS / Matrix",
          "description": "Problem:\n  Implement **Distance Of Nearest Cell Having 1 1587115620**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Distance Of Nearest Cell Having 1 1587115620"
        },
        {
          "year": "2024",
          "link": "https://leetcode.com/problems/word-search/description/",
          "difficulty": "Medium",
          "topic": "Backtracking",
          "description": "Problem:\n  Implement **Word Search**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Word Search"
        },
        {
          "year": "2024",
          "link": "https://leetcode.com/problems/find-median-from-data-stream/description/",
          "difficulty": "Hard",
          "topic": "Priority Queue",
          "description": "Problem:\n  Implement **Find Median From Data Stream**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Find Median From Data Stream"
        },
        {
          "year": "2024",
          "link": "https://leetcode.com/problems/valid-parentheses/",
          "difficulty": "Easy",
          "topic": "Stacks",
          "description": "Problem:\n  Implement **Valid Parentheses**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Valid Parentheses"
        },
        {
          "year": "2024",
          "link": "https://leetcode.com/problems/longest-valid-parentheses/description/",
          "difficulty": "Hard",
          "topic": "Stacks",
          "description": "Problem:\n  Implement **Longest Valid Parentheses**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Longest Valid Parentheses"
        },
        {
          "year": "2024",
          "link": "https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses/description/",
          "difficulty": "Medium",
          "topic": "Stacks",
          "description": "Problem:\n  Implement **Minimum Remove To Make Valid Parentheses**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Minimum Remove To Make Valid Parentheses"
        },
        {
          "year": "2024",
          "link": "https://www.geeksforgeeks.org/connect-leaves-doubly-linked-list/",
          "difficulty": "Medium",
          "topic": "Tree / Linked List",
          "description": "Problem:\n  Implement **Connect Leaves Doubly Linked List**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Connect Leaves Doubly Linked List"
        },
        {
          "year": "2024",
          "link": "https://leetcode.com/problems/spiral-matrix/description/",
          "difficulty": "Medium",
          "topic": "Matrix",
          "description": "Problem:\n  Implement **Spiral Matrix**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Spiral Matrix"
        },
        {
          "year": "2024",
          "link": "https://leetcode.com/problems/shortest-path-in-a-grid-with-obstacles-elimination/description/",
          "difficulty": "Hard",
          "topic": "Graph",
          "description": "Problem:\n  Implement **Shortest Path In A Grid With Obstacles Elimination**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Shortest Path In A Grid With Obstacles Elimination"
        },
        {
          "year": "2024",
          "link": "https://leetcode.com/problems/permutations-ii/description/",
          "difficulty": "Medium",
          "topic": "Backtracking",
          "description": "Problem:\n  Implement **Permutations Ii**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Permutations Ii"
        },
        {
          "year": "2024",
          "link": "https://www.geeksforgeeks.org/print-subsequences-string/",
          "difficulty": "Easy",
          "topic": "Recursion",
          "description": "Problem:\n  Implement **Print Subsequences String**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Print Subsequences String"
        },
        {
          "year": "2024",
          "link": "https://leetcode.com/problems/gas-station/description/",
          "difficulty": "Medium",
          "topic": "Greedy",
          "description": "Problem:\n  Implement **Gas Station**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Gas Station"
        },
        {
          "year": "2024",
          "link": "https://www.geeksforgeeks.org/problems/sorting-elements-of-an-array-by-frequency-1587115621/1",
          "difficulty": "Medium",
          "topic": "Hashing / Sorting",
          "description": "Problem:\n  Implement **Sorting Elements Of An Array By Frequency 1587115621**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Sorting Elements Of An Array By Frequency 1587115621"
        },
        {
          "year": "2024",
          "link": "http://geeksforgeeks.org/problems/phone-directory4628/1",
          "difficulty": "Hard",
          "topic": "Trie",
          "description": "Problem:\n  Implement **Phone Directory4628**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Phone Directory4628"
        },
        {
          "year": "2024",
          "link": "https://www.geeksforgeeks.org/connect-leaves-doubly-linked-list/",
          "difficulty": "Medium",
          "topic": "Tree / Linked List",
          "description": "Problem:\n  Implement **Connect Leaves Doubly Linked List**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Connect Leaves Doubly Linked List"
        },
        {
          "year": "2024",
          "link": "https://www.hackerearth.com/problem/algorithm/coin-group-8/",
          "difficulty": "Easy",
          "topic": "DP",
          "description": "Problem:\n  Implement **Coin Group 8**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Coin Group 8"
        },
        {
          "year": "2024",
          "link": "https://www.geeksforgeeks.org/problems/add-two-numbers-represented-by-linked-lists/1",
          "difficulty": "Medium",
          "topic": "Linked List",
          "description": "Problem:\n  Implement **Add Two Numbers Represented By Linked Lists**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Add Two Numbers Represented By Linked Lists"
        },
        {
          "year": "2024",
          "link": "https://leetcode.com/problems/validate-binary-search-tree/description/",
          "difficulty": "Medium",
          "topic": "BST",
          "description": "Problem:\n  Implement **Validate Binary Search Tree**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Validate Binary Search Tree"
        },
        {
          "year": "2024",
          "link": "https://www.geeksforgeeks.org/remove-characters-from-the-first-string-which-are-present-in-the-second-string/",
          "difficulty": "Easy",
          "topic": "Hashing / String",
          "description": "Problem:\n  Implement **Remove Characters From The First String Which Are Present In The Second String**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Remove Characters From The First String Which Are Present In The Second String"
        },
        {
          "year": "2024",
          "link": "https://www.geeksforgeeks.org/reverse-alternate-k-nodes-in-a-singly-linked-list/",
          "difficulty": "Medium",
          "topic": "Linked List",
          "description": "Problem:\n  Implement **Reverse Alternate K Nodes In A Singly Linked List**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Reverse Alternate K Nodes In A Singly Linked List"
        },
        {
          "year": "2024",
          "link": "https://www.geeksforgeeks.org/remove-duplicates-from-a-given-string/",
          "difficulty": "Easy",
          "topic": "Hashing / String",
          "description": "Problem:\n  Implement **Remove Duplicates From A Given String**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Remove Duplicates From A Given String"
        },
        {
          "year": "2024",
          "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/description/",
          "difficulty": "Easy",
          "topic": "BST",
          "description": "Problem:\n  Implement **Lowest Common Ancestor Of A Binary Search Tree**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Lowest Common Ancestor Of A Binary Search Tree"
        },
        {
          "year": "2024",
          "link": "https://leetcode.com/problems/merge-intervals/description/",
          "difficulty": "Medium",
          "topic": "Greedy / Intervals",
          "description": "Problem:\n  Implement **Merge Intervals**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Merge Intervals"
        },
        {
          "year": "2024",
          "link": "https://www.geeksforgeeks.org/the-celebrity-problem/",
          "difficulty": "Medium",
          "topic": "Graph / Stack",
          "description": "Problem:\n  Implement **The Celebrity Problem**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "The Celebrity Problem"
        },
        {
          "year": "2024",
          "link": "https://www.geeksforgeeks.org/introduction-and-array-implementation-of-queue/",
          "difficulty": "Easy",
          "topic": "Queue",
          "description": "Problem:\n  Implement **Introduction And Array Implementation Of Queue**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Introduction And Array Implementation Of Queue"
        },
        {
          "year": "2024",
          "link": "https://leetcode.com/problems/power-of-two/description/",
          "difficulty": "Easy",
          "topic": "Bit Manipulation",
          "description": "Problem:\n  Implement **Power Of Two**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "Power Of Two"
        },
        {
          "year": "2024",
          "link": "https://www.geeksforgeeks.org/how-to-create-a-dictionary-in-cpp/",
          "difficulty": "Easy",
          "topic": "STL / HashMap",
          "description": "Problem:\n  Implement **How To Create A Dictionary In Cpp**.\n\nExample:\n  Input: <sample input>\n  Output: <expected output>\n\nApproach:\n  1. Describe main idea or algorithm.\n  2. Detail any preprocessing or data structures.\n  3. Analyze time and space complexities.",
          "title": "How To Create A Dictionary In Cpp"
        }
      ],
    "oops": [
      { "year": "2024", "link": "What is the best possible time complexity for a given algorithm?",  "difficulty": "Medium" },
      { "year": "2024", "link": "What is the best possible space complexity achievable?" ,  "difficulty": "Medium"},
      { "year": "2024", "link": "What are abstract classes and interfaces? Which one offers more abstraction?" ,  "difficulty": "Medium"},
      { "year": "2024", "link": "How can multiple inheritance be implemented in Java and C++?",  "difficulty": "Medium" },
      { "year": "2024", "link": "What is inheritance upcasting and downcasting in Java?",  "difficulty": "Easy" }
    ],
    "os": [
      { "year": "2021", "link": "What are deadlocks and how can they be prevented in an operating system?",  "difficulty": "Medium" },
      { "year": "2021", "link": "What is the difference between a mutex and a semaphore?",  "difficulty": "Medium" },
      { "year": "2022", "link": "What is Belady’s Anomaly? Explain it with an example.",  "difficulty": "Medium" },
      { "year": "2024", "link": "How can a large file (e.g., a video or movie) be sent over the Internet?",  "difficulty": "Easy"},
      { "year": "2024", "link": "What is the difference between the Linux and Windows operating systems or kernels?",  "difficulty": "Medium"},
      { "year": "2024", "link": "What is the difference between a process and a thread?",  "difficulty": "Easy" },
      { "year": "2024", "link": "What are the key properties of distributed systems?",  "difficulty": "Medium" }
    ],
    "dbms": [
      { "year": "2022", "link": "What is Boyce-Codd Normal Form (BCNF)? How is it different from Third Normal Form (3NF)? Provide an example.",  "difficulty": "Medium"}
    ],
    "system_design": [
      { "year": "2020", "link": "How would you design a URL shortener like TinyURL?",  "difficulty": "Medium" },
      { "year": "2022", "link": "Explain the Singleton design pattern and provide a use case.",  "difficulty": "Easy" },
      { "year": "2022", "link": "Explain the Builder design pattern with a real-world analogy.",  "difficulty": "Easy" },
      { "year": "2022", "link": "Design a system for managing employee work approvals.",  "difficulty": "Medium" },
      { "year": "2022", "link": "How would you integrate a service with AWS or Azure? What are the key considerations?",  "difficulty": "Medium" },
      { "year": "2022", "link": "Design a messaging application similar to WhatsApp. What should be the structure of the database/data structures/tables? What core functionalities would you prioritize? What would be your top 5 test cases to validate this application?",  "difficulty": "Hard" },
      { "year": "2024", "link": "Design a scalable voting system for 100 million users, considering global distribution and user categories such as NRIs and Indian residents.",  "difficulty": "Hard" },
      { "year": "2024", "link": "Design a multiplayer tic-tac-toe game for smartphones.", "difficulty": "Medium" },
      { "year": "2024", "link": "Design a vending machine that is accessible to blind and deaf users.", "difficulty": "Medium" }
    ],
    "Behavioral": [
      "Why Microsoft?",
      "Tell me about yourself",
      "Why are you interested in this role?",
      "What’s your favorite Microsoft product? What are its advantages and disadvantages, and how would you improve it?",
      "How open are you to new ideas?",
      "Describe a time you learned from a mistake.",
      "Describe a time you were wrong and how you handled it.",
      "Tell me about a time you helped a teammate approach a problem in a new way.",
      "What has been your biggest accomplishment so far?",
      "Can you describe your long-term career goals?",
      "How do you handle competing priorities?",
      "What are your strengths?",
      "Tell us something unique about yourself and elaborate on your hobbies.",
      "What are some trending technologies you’re excited about?"
    ]
  }
}
]
